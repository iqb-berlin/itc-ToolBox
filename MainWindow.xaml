<Window x:Class="MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:libco="clr-namespace:iqb.lib.components;assembly=iqblib-components"
        xmlns:local="clr-namespace:iqb.testcenter.toolbox"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" Icon="Resources/IQB-Testcenter.ico">
    <Window.Resources>
        <ResourceDictionary Source="pack://application:,,,/iqblib-components;component/GlobalStyles.xaml"/>
    </Window.Resources>
    <DockPanel>
        <DockPanel DockPanel.Dock="Top" Margin="2">
            <libco:ButtonHelp DockPanel.Dock="Right" Height="26" VerticalAlignment="Top"/>
            <Label Style="{StaticResource gsTip}" Margin="10" DockPanel.Dock="Top">
                Diese Anwendung transformiert Daten des IQB-Testcenters. Im oberen Abschnitt werden Excel-Dateien zu XML-Steuerdateien verarbeitet, die
                für die Definition einer Studie erforderlich sind. Im unteren Abschnitt werden Antwortdaten aus dem IQB-Testcenter (csv/JSON-Rohdaten des
                Verona-Players) in eine Excel-Datei geschrieben, die sich besser verarbeiten lässt.
            </Label>
        </DockPanel>
        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
            <StackPanel>
                <StackPanel.Resources>
                    <VisualBrush
                        x:Key="HatchBrush1"
                        TileMode="Tile" Viewport="0,0,20,20"
                        ViewportUnits="Absolute" Viewbox="0,0,20,20"   
                        ViewboxUnits="Absolute">
                        <VisualBrush.Visual>
                            <Canvas>
                                <Rectangle Fill="#FFEAEAEA" Width="20" Height="20" />

                                <Path Stroke="White" Data="M 0 10 l 10 10" />
                                <Path Stroke="White" Data="M 10 0 l 7 3" />
                                <Path Stroke="White" Data="M 17 3 l 3 7" />

                                <Path Stroke="White" Data="M 6 0 l -6 20" />
                                <Path Stroke="White" Data="M 20 0 l -14 20" />
                            </Canvas>
                        </VisualBrush.Visual>
                   </VisualBrush>
                    <Style TargetType="Button">
                        <Setter Property="Padding" Value="10 4 10 4"/>
                        <Setter Property="Margin" Value="10 2 2 2"/>
                        <Setter Property="VerticalAlignment" Value="Top"/>
                    </Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="TextWrapping" Value="Wrap"/>
                        <Setter Property="Margin" Value="10 2 2 2"/>
                    </Style>
                </StackPanel.Resources>
                <TextBlock Padding="4 10 0 5" Background="{StaticResource HatchBrush1}">
                    <Run Text="Testmaterial" FontSize="16"/></TextBlock>
                <Grid Margin="10 0 0 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"></ColumnDefinition>
                        <ColumnDefinition Width="2*"></ColumnDefinition>
                        <ColumnDefinition Width="1*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" Click="BtnBookletXlsx_Click">Booklet-Xlsx</Button>
                    <TextBlock Grid.Column="1">
                            Einlesen einer speziell vorbereiteten Excel-Tabelle, Prüfen und Erzeugen von XML-Booklets.
                    </TextBlock>
                </Grid>
                <TextBlock Padding="4 10 0 5" Background="{StaticResource HatchBrush1}">
                    <Run Text="Testergebnisse" FontSize="16"/></TextBlock>
                <Grid Margin="10 0 0 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"></ColumnDefinition>
                        <ColumnDefinition Width="2*"></ColumnDefinition>
                        <ColumnDefinition Width="1*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Button Grid.Column="0" Grid.Row="0" Click="BtnSysCheck_Click">SysCheck csv -> xlsx</Button>
                    <TextBlock Grid.Column="1" Grid.Row="0">
                            Einlesen einer CSV aus den System-Check-Ergebnissen, Speichern als Xlsx (Umlaute korrigiert)
                    </TextBlock>
                    <Button Grid.Column="0" Grid.Row="1" Click="BtnResponses_Click">
                        <Button.Content>
                            <TextBlock>
                                Antworten und Logs csv -> xlsx
                            </TextBlock>
                        </Button.Content>
                    </Button>
                    <TextBlock Grid.Column="1" Grid.Row="1">
                            Einlesen aller CSV mit Antworten und Logdaten, Speichern als Xlsx (Umlaute korrigiert)
                    </TextBlock>
                    <TextBlock Grid.Row="1" Grid.Column="2">
                        <Hyperlink Click="HyperlinkClick" NavigateUri="https://github.com/iqb-berlin/itc-toolbox/docs/manual-output.md">
                            <Run Text="Dokumentation" ToolTip="Link zu GitHub"/>
                        </Hyperlink>
                    </TextBlock>
                </Grid>
            </StackPanel>
        </ScrollViewer>
    </DockPanel>
</Window>
